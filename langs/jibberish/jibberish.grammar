grammar
 name jibberish
 description A useless Tree Language built for testing Tree Notation code.
 constructors
  nodejs ./JibberishLang.js JibberishProgramRoot
 compiler txt
 catchAllNodeType error
 inScope topLevel text someAbstractClass
cellType anyFirstWord
cellType columnNameEnum
cellType columnName
cellType errorWord
 highlightScope invalid
cellType int
 highlightScope constant.numeric
cellType onoff
 enum on off
cellType word
cellType topLevelProperty
 highlightScope constant.language
cellType opSymbol
 highlightScope keyword.operator.arithmetic
abstract someAbstractClass
abstract topLevel
 firstCellType topLevelProperty
abstract color_properties topLevel
 group hue saturation constrast
 cells int
nodeType error
 firstCellType errorWord
 catchAllCellType errorWord
 baseNodeType errorNode
nodeType lineOfCode
 catchAllCellType word
 constructors
  nodejs ./JibberishLang.js LineOfCodeNode
  browser LineOfCodeNode JibberishLang.js
nodeType text
 baseNodeType blobNode
nodeType extendsAbstract someAbstractClass
 cells int
nodeType add topLevel
 constructors
  nodejs ./JibberishLang.js additionNode
nodeType + add
 firstCellType opSymbol
 example Adding two numbers:
  + 1 2
 catchAllCellType int
nodeType block topLevel
 inScope topLevel
nodeType to block
 cells word
 compiler txt
  sub to {word}
  closeChildren end
nodeType foo topLevel
nodeType xColumnName topLevel
 description The name of the column to use for the x axis
 cells columnNameEnum
 javascript
  getRunTimeEnumOptions(cell) {
    return cell.getCellTypeId() === "columnNameEnum" ? ["gender", "height", "weight"] : undefined
  }
nodeType lightbulbState topLevel
 cells onoff
nodeType nested topLevel
 constructors
  nodejs ./JibberishLang.js nested.someNestedNode
nodeType nodeWithConsts topLevel
 string greeting hello world
 string singleWord hello
 int score1 28
 int anArray 2 3 4
 float score2 3.01
 boolean win true
nodeType someCode topLevel
 catchAllNodeType lineOfCode
nodeType type topLevel
 cells word
 single