keywordCell
anyCell
fieldIdCell
 extends keywordCell
enumOptionCell
 extends anyCell
 highlightScope string
typeIdCell
 highlightScope variable
stringKeyCell
 highlightScope string
interfaceIdCell
 highlightScope variable
commentKeywordCell
 extends keywordCell
 highlightScope comment
commentCell
 extends anyCell
 highlightScope comment
wwtNode
 description WorldWideTypes. A work in progress. A simple Tree Language for only declaring types and interfaces that compiles to TypeScript, and in the future other langs.
 root
 inScope abstractTypeDeclarationNode interfaceDeclarationNode
 catchAllNodeType errorNode
 compilesTo ts
 javascript
  compile() {
   return `namespace {\n ` + super.compile().replace(/\n\s*\n+/g, "\n") + "\n}"
  }
commentNode
 baseNodeType blobNode
 cells commentKeywordCell
 catchAllCellType commentCell
 compiler
  stringTemplate /* {commentCell} */
 crux comment
errorNode
 baseNodeType errorNode
abstractTypeDeclarationNode
 abstract
 inScope commentNode
 cells typeIdCell
enumTypeDeclarationNode
 extends abstractTypeDeclarationNode
 inScope enumOptionsNode
 pattern EnumType$
unionTypeDeclarationNode
 extends abstractTypeDeclarationNode
 pattern UnionType$
 inScope unionTypesNode
mapTypeDeclarationNode
 extends abstractTypeDeclarationNode
 pattern MapType$
 inScope keyNode valueNode
typeDeclarationNode
 extends abstractTypeDeclarationNode
 pattern Type$
 inScope extendsNode
 compiler
  stringTemplate export declare type {typeIdCell} = {extends}
extendsNode
 cells keywordCell typeIdCell
 required
 compiler
  stringTemplate 
 crux extends
enumOptionsNode
 cells keywordCell
 catchAllCellType enumOptionCell
 crux enumOptions
unionTypesNode
 cells keywordCell
 catchAllCellType typeIdCell
 crux unionTypes
keyNode
 cells keywordCell stringKeyCell typeIdCell
 crux key
valueNode
 cells keywordCell typeIdCell
 crux value
interfaceDeclarationNode
 pattern Interface$
 cells interfaceIdCell
 inScope commentNode fieldDeclarationNode
 compiler
  stringTemplate export interface {interfaceIdCell} {
  closeChildren }
fieldDeclarationNode
 pattern Field
 cells fieldIdCell typeIdCell
 inScope optionalNode arrayNode
 compiler
  stringTemplate {fieldIdCell}: {typeIdCell}
optionalNode
 description Is this field optional?
 cells keywordCell
 crux optional
arrayNode
 description Does this take an array
 cells keywordCell
 crux array