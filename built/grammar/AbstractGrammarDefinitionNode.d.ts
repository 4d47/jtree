import TreeNode from "../base/TreeNode";
import GrammarDefinitionErrorNode from "./GrammarDefinitionErrorNode";
import GrammarCompilerNode from "./GrammarCompilerNode";
import GrammarProgram from "./GrammarProgram";
import GrammarKeywordDefinitionNode from "./GrammarKeywordDefinitionNode";
import types from "../types";
declare abstract class AbstractGrammarDefinitionNode extends TreeNode {
    getKeywordMap(): {};
    getId(): string;
    protected _isNonTerminal(): boolean;
    _isAbstract(): boolean;
    protected _isAnyNode(): boolean;
    private _cache_definedNodeConstructor;
    getDefinedConstructor(): any;
    protected _getDefaultNodeConstructor(): types.RunTimeNodeConstructor;
    protected _getDefinedNodeConstructor(): types.RunTimeNodeConstructor;
    getCatchAllNodeConstructor(line: string): typeof GrammarDefinitionErrorNode;
    getProgram(): GrammarProgram;
    getDefinitionCompilerNode(targetLanguage: any, node: any): GrammarCompilerNode;
    protected _getCompilerNodes(): GrammarCompilerNode[];
    getTargetExtension(): string;
    private _cache_keywordsMap;
    getRunTimeKeywordMap(): any;
    getRunTimeKeywordNames(): string[];
    getRunTimeKeywordMapWithDefinitions(): {};
    getNodeColumnTypes(): string[];
    protected _initKeywordsMapCache(): any;
    _getKeywordsInScope(): string[];
    getTopNodeTypes(): string[];
    protected _getKeywordsNode(): TreeNode;
    isRequired(): boolean;
    isSingle(): boolean;
    _getRunTimeCatchAllKeyword(): string;
    getKeywordDefinitionByName(keyword: string): AbstractGrammarDefinitionNode;
    protected _getCatchAllDefinition(): AbstractGrammarDefinitionNode;
    private _cache_catchAllConstructor;
    protected _initCatchAllNodeConstructorCache(): any;
    getHighlightScope(): string | undefined;
    getAutocompleteWords(inputStr: any, additionalWords?: any[]): string[];
    isDefined(keyword: any): boolean;
    _getProgramKeywordDefinitionCache(): {
        [keyword: string]: GrammarKeywordDefinitionNode;
    };
    getRunTimeCatchAllNodeConstructor(): any;
}
export default AbstractGrammarDefinitionNode;
